if (NOT DEFINED OSFLAG)
 if (WIN32)
   set( OSFLAG "Windows" )
 elseif (UNIX)
   set( OSFLAG "Linux" )
 endif()
endif()

if (NOT DEFINED ARCHFLAG)
if (DEFINED CMAKE_SYSTEM_PROCESSOR)
  if (CMAKE_SYSTEM_PROCESSOR STREQUAL "i686")
    set(ARCHFLAG "X86")
  elseif (CMAKE_SYSTEM_PROCESSOR STREQUAL "x86")
    set(ARCHFLAG "X86")
  elseif (CMAKE_SYSTEM_PROCESSOR STREQUAL "i386")
    set(ARCHFLAG "X86")
  elseif (CMAKE_SYSTEM_PROCESSOR STREQUAL "amd64")
    set(ARCHFLAG "X64")
  elseif (CMAKE_SYSTEM_PROCESSOR STREQUAL "AMD64")
    set(ARCHFLAG "X64")
  elseif (CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64")
    set(ARCHFLAG "X64")
  elseif (CMAKE_SYSTEM_PROCESSOR STREQUAL "armv5te")
    set(ARCHFLAG "armeabi")
  elseif (CMAKE_SYSTEM_PROCESSOR STREQUAL "armv7-a")
    set(ARCHFLAG "armeabi-v7a")
  elseif (CMAKE_SYSTEM_PROCESSOR STREQUAL "aarch64")
    set(ARCHFLAG "aarch64")
  elseif (CMAKE_SYSTEM_PROCESSOR STREQUAL "mips")
    set(ARCHFLAG "mips")
  endif()
endif()
endif()

message(STATUS "OSFLAG: " ${OSFLAG})
message(STATUS "ARCHFLAG: " ${ARCHFLAG})


if (WIN32)
#set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} $ENV{GIRAFFECV_DIR}/QT/5.4/msvc2013_64_opengl)
#set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} $ENV{GIRAFFECV_DIR}/third_party/Sophus/Sophus-master)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} $ENV{GIRAFFECV_DIR}/cmake)
#set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} $ENV{GIRAFFECV_DIR}/third_party/flann/flann-1.8.4-src/flann-1.8.4-src/cmake)
#set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} $ENV{GIRAFFECV_DIR}/third_party/G2O/g2o-master/g2o-master/cmake_modules)

#set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} $ENV{GIRAFFECV_DIR}/third_party/boost/boost_1_57_0/boost_1_57_0)
#set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} $ENV{GIRAFFECV_DIR}/third_party/cudpp/cudpp-2.2/include)
#set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} $ENV{GIRAFFECV_DIR}/third_party/flann/flann-1.8.4-src/flann-1.8.4-src/src/cpp)
#set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} $ENV{GIRAFFECV_DIR}/third_party/Sophus/Sophus-master/sophus)
#set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} $ENV{GIRAFFECV_DIR}/third_party/G2O/g2o-master/g2o-master)
elseif (UNIX)

endif (WIN32)


set(CMAKE_LIBRARY_PATH ${CMAKE_LIBRARY_PATH} $ENV{GIRAFFECV_DIR}/build/${OSFLAG}/${ARCHFLAG}/lib/Debug)
set(CMAKE_LIBRARY_PATH ${CMAKE_LIBRARY_PATH} $ENV{GIRAFFECV_DIR}/build/${OSFLAG}/${ARCHFLAG}/lib/Release)
#set(CMAKE_LIBRARY_PATH ${CMAKE_LIBRARY_PATH} $ENV{GIRAFFECV_DIR}/build/third_party/boost/boost_1_57_0/lib)

#set(CMAKE_LIBRARY_PATH ${CMAKE_LIBRARY_PATH} $ENV{GIRAFFECV_DIR}/third_party/cudpp/cudpp-2.2/build/lib)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG $ENV{GIRAFFECV_DIR}/build/${OSFLAG}/${ARCHFLAG}/bin/Debug)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG $ENV{GIRAFFECV_DIR}/build/${OSFLAG}/${ARCHFLAG}/lib/Debug)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG $ENV{GIRAFFECV_DIR}/build/${OSFLAG}/${ARCHFLAG}/lib/Debug)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE $ENV{GIRAFFECV_DIR}/build/${OSFLAG}/${ARCHFLAG}/bin/Release)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE $ENV{GIRAFFECV_DIR}/build/${OSFLAG}/${ARCHFLAG}/lib/Release)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE $ENV{GIRAFFECV_DIR}/build/${OSFLAG}/${ARCHFLAG}/lib/Release)

LINK_DIRECTORIES(
	${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}
)

set(GIRAFFECV_LIBS_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/Libs)
set(GIRAFFECV_Boost_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/Boost)
set(GIRAFFECV_OpenCV_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/OpenCV)
set(GIRAFFECV_OpenCV_Version "470")
function(giraffecv_get_opencv_lib libName buildType ret)
if (WIN32)
    if(${buildType} MATCHES "Debug")
        set(${ret} "opencv_${libName}${GIRAFFECV_OpenCV_Version}d.lib" PARENT_SCOPE)
    elseif(${buildType} MATCHES "Release")
        set(${ret} "opencv_${libName}${GIRAFFECV_OpenCV_Version}.lib" PARENT_SCOPE)
    endif()
elseif(UNIX)
    set(${ret} "opencv_${libName}" PARENT_SCOPE)
endif(WIN32)
endfunction()

function(giraffecv_get_opencv_lib_static libName buildType ret)
if (WIN32)
    if(${buildType} MATCHES "Debug")
        set(${ret} "opencv_${libName}${GIRAFFECV_OpenCV_Version}d.lib" PARENT_SCOPE)
    elseif(${buildType} MATCHES "Release")
        set(${ret} "opencv_${libName}${GIRAFFECV_OpenCV_Version}.lib" PARENT_SCOPE)
    endif()
elseif(UNIX)
    set(${ret} "opencv_${libName}.a" PARENT_SCOPE)
endif(WIN32)
endfunction()

set(GIRAFFECV_OpenCV3_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/OpenCV3)

set(GIRAFFECV_LIBS_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/Libs)
set(GIRAFFECV_G2O_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/G2O)
set(GIRAFFECV_OpenSURF_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/OpenSURF)
set(GIRAFFECV_Eigen_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/Eigen)
set(GIRAFFECV_FreeGlut_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/GLTools/free_glut)
set(GIRAFFECV_GLM_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/GLTools/glm)
set(GIRAFFECV_GLFW_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/GLTools/glfw)
set(GIRAFFECV_GLEW_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/GLTools/glew)
set(GIRAFFECV_FFMPEG_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/FFMPEG)
set(GIRAFFECV_DevIL_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/DevIL)
set(GIRAFFECV_SiftGPU_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/SiftGPU)
set(GIRAFFECV_EPA_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/EPA)
set(GIRAFFECV_HUATU_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/IPC/HuaTu)
set(GIRAFFECV_OrTools_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/OrTools)
set(GIRAFFECV_GLPK_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/GLPK)
set(GIRAFFECV_MySQLConnectorCPP_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/DataBase/MySQL_Connector_CPP)
set(GIRAFFECV_CryptoPP_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/CryptoPP)
set(GIRAFFECV_Oculus_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/Oculus)
set(GIRAFFECV_CUDPP_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/CUDPP)
set(GIRAFFECV_CuDNN_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/CuDNN)
set(GIRAFFECV_Blaze_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/Blaze)
set(GIRAFFECV_IntelMediaSDK_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/Codecs/Intel)
set(GIRAFFECV_FLANN_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/FLANN)
set(GIRAFFECV_GoogleTest_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/GoogleTest)
set(GIRAFFECV_QHull_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/QHull)
set(GIRAFFECV_VTK_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/VTK)
set(GIRAFFECV_PCL_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/PCL)
set(GIRAFFECV_PCL_PATH $ENV{GIRAFFECV_DIR}/build/3rd_party/Sophus)